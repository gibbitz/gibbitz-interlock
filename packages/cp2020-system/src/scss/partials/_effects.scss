@use 'sass:math';

// below inspiried by Alec Lownes & Lucas Bebber
// https: //aleclownes.com/2017/02/01/crt-display.html

$rgb-cyan: rgba(0, 30, 255, 0.5);
$rgb-magenta: rgba(255, 0, 80, 0.3);

@keyframes flicker {
  @for $i from 0 through 20 {
    #{ $i * 5% } {
      opacity: math.random();
    }
  }
}

@keyframes separateChannels {
  @for $i from 0 through 20 {
    #{ $i * 5% } {
          text-shadow: (math.random() * 1px) 0 1px $rgb-cyan, (math.random() * 1px) 0 1px $rgb-magenta, 0 0 3px;
    }
  }
}

// placeholder for non-strobing hover effect
%crt-hover {
  &:hover {
    animation: separateChannels 1.6s infinite;
  }
}

// placeholder for full-size screen pseudos
%crt-psuedo {
  bottom: 0;
  content: " ";
  display: block;
  left: 0;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 2;
}

// classname for opt-in/out
.crt{
  &::before {
    @extend %crt-psuedo;
    background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%), linear-gradient(90deg, rgba(255, 0, 0, 0.06), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.06));
    background-size: 100% 2px, 3px 100%;
  }
  &::after {
    @extend %crt-psuedo;
    background: rgba(18, 16, 16, 0.1);
    opacity: 0;
    animation: flicker 0.15s infinite;
  }
}